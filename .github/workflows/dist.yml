name: Dist

on:
  release:
    types: [ published ]
  workflow_dispatch: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          lib: libschiller_lib.so
        - os: windows-latest
          lib: schiller_lib.dll

    steps:
    - name: Install LLVM and Clang # required for bindgen: https://github.com/actions/virtual-environments/issues/3316
      if: matrix.os == 'windows-latest'
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
    - name: Set LIBCLANG_PATH
      if: matrix.os == 'windows-latest'
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.lib }}
        path: target/release/${{ matrix.lib }}

  package:
    name: Package ${{ matrix.platform }}
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        include:
        - platform: x11
          lib: libschiller_lib.so
        - platform: win
          lib: schiller_lib.dll

    steps:
    - uses: actions/checkout@v2
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.lib }}
        path: target/release/
    - name: Package
      id: package
      uses: josephbmanley/build-godot-action@v1.4.1
      with:
        preset: ${{ matrix.platform }}
        name: schiller-lib-${{ matrix.platform }}
        package: true
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: schiller-lib-${{ matrix.platform }}.zip
        path: ${{ github.workspace }}/${{ steps.package.outputs.build }}
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ github.workspace }}/${{ steps.package.outputs.build }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
