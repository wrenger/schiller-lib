name: Dist

on:
  release:
    types: [ published ]
  workflow_dispatch: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          lib: libsbv_gd.so
        - os: windows-latest
          lib: sbv_gd.dll

    steps:
    - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
      uses: KyleMayes/install-llvm-action@v1
      if: matrix.os == 'windows-latest'
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
    - name: Set LIBCLANG_PATH
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.lib }}
        path: target/release/${{ matrix.lib }}

  package:
    name: Package ${{ matrix.platform }}
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        include:
        - platform: x11
          lib: libsbv_gd.so
          exe: schiller-lib.x86_64
        - platform: win
          lib: sbv_gd.dll
          exe: schiller-lib.exe

    steps:
    - uses: actions/checkout@v2
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.lib }}
        path: target/release/
    - name: Package
      run: |
        mkdir -p export/${{ matrix.platform }}
        ./bin/headless/Godot_v3.3-stable_linux_headless.64 --export ${{ matrix.platform }} export/${{ matrix.platform }}/${{ matrix.exe }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: schiller-lib-${{ matrix.platform }}
        path: export/${{ matrix.platform }}
